document.addEventListener('DOMContentLoaded', () => {
    const simonBoard = document.getElementById('simon-board'); const buttons = document.querySelectorAll('.simon-button'); const infoDisplay = document.getElementById('info'); const startBtn = document.getElementById('start-btn');
    let sequence = []; let playerSequence = []; let level = 0; let isPlaying = false;
    function flashButton(color) { const button = document.querySelector(`[data-color='${color}']`); button.classList.remove('inactive'); button.classList.add('active'); setTimeout(() => { button.classList.remove('active'); button.classList.add('inactive'); }, 400); }
    function playSequence() { isPlaying = false; playerSequence = []; infoDisplay.textContent = `Nivel: ${level + 1} - Observa`; let i = 0; const interval = setInterval(() => { flashButton(sequence[i]); i++; if (i >= sequence.length) { clearInterval(interval); isPlaying = true; infoDisplay.textContent = `Nivel: ${level + 1} - Tu turno`; } }, 600); }
    function nextRound() { level++; sequence.push(buttons[Math.floor(Math.random() * buttons.length)].dataset.color); playSequence(); }
    function handlePlayerClick(event) { if (!isPlaying) return; const clickedColor = event.target.dataset.color; playerSequence.push(clickedColor); flashButton(clickedColor); const currentIndex = playerSequence.length - 1; if (playerSequence[currentIndex] !== sequence[currentIndex]) { infoDisplay.textContent = `Â¡Error! Game Over. Llegaste al nivel ${level}.`; isPlaying = false; startBtn.style.display = 'inline-block'; return; } if (playerSequence.length === sequence.length) { isPlaying = false; setTimeout(nextRound, 1000); } }
    function startGame() { sequence = []; playerSequence = []; level = 0; startBtn.style.display = 'none'; nextRound(); }
    buttons.forEach(button => button.addEventListener('click', handlePlayerClick)); startBtn.addEventListener('click', startGame);
});